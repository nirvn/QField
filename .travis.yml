language: python
python:
  - 3.5
rvm:
  - 2.0.0

# Handle git submodules manually
git:
  submodules: false

services:
  - docker

before_install:
  - sed -i 's/git@github.com:/https:\/\/github.com\//' .gitmodules
  - git submodule update --init --recursive
  - openssl aes-256-cbc -K $encrypted_c158cd588669_key -iv $encrypted_c158cd588669_iv -in keystore.p12.enc -out keystore.p12 -d
  - gem update --system
  - gem --version

script:
  - export QFIELD_SDK_VERSION=${QFIELD_SDK_VERSION:-20190922}
  - echo "travis_fold:start:docker-pull"
  - docker pull opengisch/qfield-sdk:${QFIELD_SDK_VERSION}
  - echo "travis_fold:end:docker-pull"
  - echo "travis_fold:start:tx-pull"
  - ./scripts/ci/pull_translations.sh
  - echo "travis_fold:end:tx-pull"
  - APP_NAME=$(if [ "${TRAVIS_PULL_REQUEST}" = "false" ]; then echo "QField"; else echo "QField Beta ${TRAVIS_PULL_REQUEST}"; fi)
  - PKG_NAME=$(if [ "${TRAVIS_PULL_REQUEST}" = "false" ]; then echo "qfield"; else echo "qfield_beta"; fi)
  - APP_ICON=$(if [ "${TRAVIS_PULL_REQUEST}" = "false" ]; then echo "qfield-logo.svg"; else echo "qfield-testlogo.svg"; fi)
  - docker run -v $(pwd):/usr/src/qfield -e "BUILD_FOLDER=build-${ARCH}" -e "ARCH=${ARCH}" -e "STOREPASS=${STOREPASS}" -e "KEYNAME=${KEYNAME}" -e "KEYPASS=${KEYPASS}" -e "VERSION=${TRAVIS_TAG}" -e "PKG_NAME=${PKG_NAME}" -e "APP_NAME=${APP_NAME}" -e "APP_ICON=${APP_ICON}" opengisch/qfield-sdk:${QFIELD_SDK_VERSION} /usr/src/qfield/scripts/docker-build.sh
  - ./scripts/upload-artifacts.sh

jobs:
  allow_failures:
#    - name: "üç≥ Testing"
  include:
    - stage: test
      name: "üç≥ Testing"
      script:
        - echo "travis_fold:start:build\n$(tput bold)Build QField $(tput sgr0)"
        - docker-compose -f .docker/testing/docker-compose-travis.yml run qgis /usr/src/.docker/testing/build-test.sh
      if: type = pull_request OR tag IS present OR branch = master
    - stage: test
      name: "üì± Build ARMv7"
      env:
        - ARCH=armv7
      if: type = pull_request OR tag IS present OR branch = master
    - stage: test
      name: "üì± Build ARM64-v8a"
      env:
        - ARCH=arm64_v8a
      if: type = pull_request OR tag IS present OR branch = master
    - stage: test
      name: "üì± Build X86"
      env:
        - ARCH=x86
      if: type = pull_request OR tag IS present OR branch = master
    - stage: test
      name: "‚òé  Build ARMv7 (Android 5)"
      env:
        - QFIELD_SDK_VERSION=20190128
        - ARCH=armv7
        - ANDROID_VERSION=5
      before_script:
        - patch -p1 < scripts/ci/android-5.patch
      if: type = pull_request OR tag IS present OR branch = master
    - stage: test
      name: "‚òé  Build X86 (Android 5)"
      env:
        - QFIELD_SDK_VERSION=20190128
        - ANDROID_VERSION=5
        - ARCH=x86
      before_script:
        - patch -p1 < scripts/ci/android-5.patch
      if: type = pull_request OR tag IS present OR branch = master
    - stage: deploy
      name: "üç∫ Deploy"
      if: type = pull_request OR tag IS present OR branch = master
      script:
        - pip install pyopenssl
        - pip install google-api-python-client
        - ./scripts/deploy.sh # Upload pull request apk artifacts if possible
    - stage: deploy
      name: "üåç Translations"
      if: branch = master AND type != pull_request
      addons:
        apt:
          packages:
          - qttools5-dev-tools
      install:
        pip install -r requirements.txt
      script: ./scripts/ci/update-translations.sh

matrix:
  fast_finish: true 
